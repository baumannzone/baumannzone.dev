---
import Layout from '../layouts/DefaultLayout.astro';
import BookCard from '../components/BookCard.astro';

import {
  bookList as books,
  literatureBooks,
  growthBooks,
  softwareBooks,
} from '../utils/book-list.ts';

// Filter read books from each category
const readLiteratureBooks = literatureBooks.filter(
  (book) => book.status !== 'pending',
);
const readGrowthBooks = growthBooks.filter((book) => book.status !== 'pending');
const readSoftwareBooks = softwareBooks.filter(
  (book) => book.status !== 'pending',
);

// Category display names
const categoryNames = {
  software: 'Software & Tecnología',
  growth: 'Desarrollo Personal',
  literature: 'Novelas & Ficción',
};

// Filter pending books (regardless of category)
const pendingBooks = books.filter((book) => book.status === 'pending');
---

<Layout
  title='Books | baumannzone.dev'
  description='Listado de libros que me han gustado sobre ingeniería de software, desarrollo personal y novelas.'
>
  <main
    class='bmn-container mx-auto pt-16 pb-24'
    itemscope
    itemtype='https://schema.org/CollectionPage'
  >
    <header class='text-center mx-auto max-w-3xl'>
      <p class='text-base font-semibold leading-7 text-violet-600'>/books</p>
      <h1 class='text-4xl font-semibold mb-8' itemprop='name'>Libros</h1>
      <p
        class='mt-6 mb-12 text-lg/8 text-gray-600 text-balance'
        itemprop='description'
      >
        Listado de libros que he leído sobre tecnología, desarrollo y otras
        novelas que me han gustado.
      </p>
    </header>

    <section
      class='bg-white m-2 px-4 sm:px-6 lg:px-8'
      itemprop='mainEntity'
      itemscope
      itemtype='https://schema.org/ItemList'
    >
      {/* Software & Tecnología */}
      {
        readSoftwareBooks.length > 0 && (
          <div class='pb-12'>
            <div class='sticky top-0 z-10 bg-white/70 backdrop-blur-sm pt-4 pb-3 mb-1'>
              <h2 class='text-lg tracking-tighter font-bold flex gap-[2px]'>
                <span class='font-mono text-violet-500/50'>/</span>
                {categoryNames.software}
              </h2>
            </div>

            <div class='grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-4 items-stretch mb-2'>
              {readSoftwareBooks.map((book) => (
                <BookCard book={book} />
              ))}
            </div>
          </div>
        )
      }

      {/* Desarrollo Personal */}
      {
        readGrowthBooks.length > 0 && (
          <div class='pb-12'>
            <div class='sticky top-0 z-10 bg-white/70 backdrop-blur-sm pt-4 pb-3 mb-1'>
              <h2 class='text-lg tracking-tighter font-bold flex gap-[2px]'>
                <span class='font-mono text-violet-500/50'>/</span>
                {categoryNames.growth}
              </h2>
            </div>

            <div class='grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-4 items-stretch mb-2'>
              {readGrowthBooks.map((book) => (
                <BookCard book={book} />
              ))}
            </div>
          </div>
        )
      }

      {/* Novelas & Ficción */}
      {
        readLiteratureBooks.length > 0 && (
          <div class='pb-12'>
            <div class='sticky top-0 z-10 bg-white/70 backdrop-blur-sm pt-4 pb-3 mb-1'>
              <h2 class='text-lg tracking-tighter font-bold flex gap-[2px]'>
                <span class='font-mono text-violet-500/50'>/</span>
                {categoryNames.literature}
              </h2>
            </div>

            <div class='grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-4 items-stretch mb-2'>
              {readLiteratureBooks.map((book) => (
                <BookCard book={book} />
              ))}
            </div>
          </div>
        )
      }
    </section>

    <!-- Pending Books Section -->
    {
      pendingBooks.length > 0 && (
        <section class='bg-white m-2 px-4 sm:px-6 lg:px-8 mb-8'>
          <div class='pb-12'>
            <div class='sticky top-0 z-10 bg-white/70 backdrop-blur-sm pt-4 pb-3 mb-1'>
              <h2 class='text-lg tracking-tighter font-bold flex gap-[2px]'>
                <span class='font-mono text-violet-500/50'>/</span>
                Pendientes de leer
              </h2>
            </div>

            <div class='grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-4 items-stretch mb-2'>
              {pendingBooks.map((book) => (
                <BookCard book={book} />
              ))}
            </div>
          </div>
        </section>
      )
    }
  </main>
</Layout>
