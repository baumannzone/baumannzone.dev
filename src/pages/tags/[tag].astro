---
import { getCollection } from "astro:content";
import DefaultLayout from "../../layouts/DefaultLayout.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import { getTagUrl } from "../../utils/tags";
import { Tags } from "../../types/tags";

const TIL = Tags.TIL;

export async function getStaticPaths() {
  const allPosts = await getCollection("blog");
  const tags = [...new Set(allPosts.flatMap((post) => post.data.tags || []))];

  return tags.map((tag) => ({
    params: { tag: getTagUrl(tag) },
    props: {
      tag,
      posts: allPosts
        .filter((post) => post.data.tags?.includes(tag))
        .sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime()),
    },
  }));
}

const { tag, posts } = Astro.props;
---

<DefaultLayout
  title={`${tag} | Baumannzone.dev`}
  description={`Artículos etiquetados con ${tag}`}
>
  <section class="bmn-container mx-auto mt-16 mb-32">
    <header class="text-center mb-8">
      <p class="text-base font-semibold leading-7 text-violet-600">/tags</p>
      <h1
        class="text-4xl font-bold"
        style={`view-transition-name: tag-${getTagUrl(tag)}`}
      >
        {tag === TIL ? "Today I Learned" : tag}
        <span class="text-2xl text-gray-500">
          ({posts.length})
        </span>
      </h1>
      <p class="text-zinc-500">
        {tag === TIL ? "Artículos sobre cosas que aprendí hoy" : null}
      </p>
    </header>

    <div class="space-y-4">
      <ul class="space-y-2">
        {
          posts.map((post) => (
            <li>
              <a
                href={`/blog/${post.slug}`}
                class="block hover:bg-zinc-200 rounded-xl transition group focus:outline-none focus:ring-2 focus:ring-violet-500 focus:ring-offset-2"
              >
                <div class="rounded-xl border-2 border-zinc-200">
                  <div class="flex justify-between gap-4 items-start px-6 py-4">
                    <span
                      class="font-medium text-zinc-800"
                      style={`view-transition-name: post-${post.slug}`}
                    >
                      {post.data.title}
                    </span>
                    <span class="text-sm text-zinc-400 tabular-nums whitespace-nowrap">
                      <FormattedDate date={post.data.pubDate} type="pubDate" />
                    </span>
                  </div>
                </div>
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </section>
</DefaultLayout>
