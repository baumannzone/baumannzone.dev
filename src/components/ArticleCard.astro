---
import FormattedDate from "./FormattedDate.astro";

// isBlog: blog post in the blog page
// isNew: newest post with green label
// Otherwise, blog post in the home page
interface Props {
  isNew?: boolean;
  post: {
    slug: string;
    data: any;
  };
}

const { post, isNew = false } = Astro.props;
const articleUrl = `/blog/${post.slug}`;
---

<article itemscope itemtype="https://schema.org/Article">
  <div class="group relative">
    <div class="flex items-center gap-x-4 text-xs">
      <FormattedDate
        date={post.data.pubDate}
        className="text-gray-500"
        type="pubDate"
      />
      {
        isNew ? (
          <span class="bg-green-500 text-white text-xs font-medium px-2.5 py-0.5 rounded">
            ðŸ”¥ New
          </span>
        ) : null
      }
    </div>
    <h2
      class="mt-2 text-lg font-semibold text-gray-900 group-hover:text-gray-600 transition-colors"
      itemprop="headline"
      style={`view-transition-name: post-${post.slug}`}
    >
      {post.data.title}
    </h2>
    <p class="mt-4 mb-4 text-sm leading-6 text-gray-600" itemprop="description">
      {post.data.description}
    </p>

    <a
      href={articleUrl}
      class="text-sm font-semibold leading-6 text-violet-700 group-hover:text-violet-500 transition-colors"
      itemprop="url"
    >
      <span class="absolute inset-0"></span>
      Ver mÃ¡s
      <span
        class="inline-block ms-0 transition-transform group-hover:translate-x-1"
      >
        â†’
      </span>
    </a>

    <meta itemprop="datePublished" content={post.data.pubDate.toISOString()} />
    <meta itemprop="url" content={new URL(articleUrl, Astro.url).toString()} />
    <meta itemprop="author" content={post.data.author} />
  </div>
</article>
