---
import type { Tags } from '../types/tags';

interface Props {
  title: string;
  description: string;
  pubDate: Date;
  updatedDate?: Date;
  slug: string;
  ogImage?: string;
  tags?: Tags[];
  author?: string;
}

const { 
  title, 
  description, 
  pubDate, 
  updatedDate, 
  slug, 
  ogImage,
  tags,
  author = 'Jorge Baumann'
} = Astro.props;

const url = `https://baumannzone.dev/blog/${slug}`;
const publishedDate = pubDate.toISOString();
const modifiedDate = updatedDate ? updatedDate.toISOString() : publishedDate;

const jsonLd = {
  '@context': 'https://schema.org',
  '@type': 'BlogPosting',
  headline: title,
  description: description,
  image: ogImage,
  url: url,
  datePublished: publishedDate,
  dateModified: modifiedDate,
  inLanguage: 'es-ES',
  ...(tags && tags.length > 0 && { keywords: tags.join(', ') }),
  author: {
    '@type': 'Person',
    name: author,
    url: 'https://baumannzone.dev',
    sameAs: [
      'https://twitter.com/baumannzone',
      'https://github.com/baumannzone',
      'https://linkedin.com/in/baumannzone'
    ]
  },
  publisher: {
    '@type': 'Organization',
    name: 'Baumannzone',
    url: 'https://baumannzone.dev',
    logo: {
      '@type': 'ImageObject',
      url: 'https://baumannzone.dev/favicon.svg'
    }
  },
  mainEntityOfPage: {
    '@type': 'WebPage',
    '@id': url,
  },
  articleSection: 'Technology',
  articleBody: description
};
---

<script type='application/ld+json' is:inline set:html={JSON.stringify(jsonLd)} />
